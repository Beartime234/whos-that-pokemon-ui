service: whos-that-pokemon-ui

plugins:
  - serverless-s3-sync

custom:
  siteName: whosthatpokemon.xyz
  aliasDNSName: s3-website-us-east-1.amazonaws.com
  aliasHostedZoneId: Z2O1EMRO9K5GLX
  certificateArn: arn:aws:acm:us-east-1:934679804324:certificate/e9d4580c-1ff4-4836-9a7e-9a9e532be2e6
  s3Sync:
    - bucketName: ${self:custom.siteName}
      localDir: public

provider:
  name: aws
  stage: ${opt:stage}
  runtime: nodejs6.10


resources:
  Resources:
    StaticSiteCloudfront:
      Type: AWS::CloudFront::Distribution
      DependsOn:
        - StaticSite
      Properties:
        DistributionConfig:
          Comment: CloudFront to S3
          Origins:
            - DomainName: !Join
                - '.'
                - - ${self:custom.siteName}
                  - s3-website-us-east-1.amazonaws.com
              Id: S3RootOrigin
              CustomOriginConfig:
                HTTPPort: '80'
                HTTPSPort: '443'
                OriginProtocolPolicy: http-only
          Enabled: true
          HttpVersion: 'http2'
          DefaultRootObject: index.html
          Aliases:
            - ${self:custom.siteName}
          DefaultCacheBehavior:
            AllowedMethods:
              - HEAD
              - DELETE
              - POST
              - GET
              - OPTIONS
              - PUT
              - PATCH
            Compress: true
            TargetOriginId: S3RootOrigin
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
          ViewerCertificate:
            AcmCertificateArn: ${self:custom.certificateArn}
            SslSupportMethod: sni-only
    StaticSite:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        BucketName: ${self:custom.siteName}
        WebsiteConfiguration:
          IndexDocument: index.html
    StaticSiteS3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket:
          Ref: StaticSite
        PolicyDocument:
          Statement:
            - Sid: PublicReadGetObject
              Effect: Allow
              Principal: "*"
              Action:
                - s3:GetObject
              Resource:
                Fn::Join: [
                  "", [
                  "arn:aws:s3:::",
                  {
                    "Ref": "StaticSite"
                  },
                  "/*"
                ]
                ]